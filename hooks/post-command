#!/usr/bin/env bash
set -euo pipefail

debug() {
  >&2 echo "$*"
}

error() {
  debug "$@"
  exit 1
}

print_os() {
  local OS
  OS=$(uname -s)

  if [[ "${OS}" = "Linux" ]] ; then
    if [[ -f /etc/alpine-release ]] ; then
      echo "alpine"
      return
    fi
    echo "linux"
    return

  elif [[ "${OS}" == "Darwin" ]]; then
    echo "macos"
    return
  fi

  echo "${OS}"
}

OS=$(print_os)
CODECOV_VERSION="${BUILDKITE_PLUGIN_CODECOV_UPLOADER_VERSION:-latest}"
TMP_DIR="${BUILDKITE_PLUGIN_CODECOV_TMP_DIR:-/tmp}/codecov-buildkite-plugin/${OS}/${CODECOV_VERSION}"

# Reads a list from plugin config into a global result array
# Returns success if values were read
plugin_read_list_into_result() {
  result=()

  for prefix in "$@" ; do
    local i=0
    local parameter="${prefix}_${i}"

    if [[ -n "${!prefix:-}" ]] ; then
      error "ðŸš¨ Plugin received a string for $prefix, expected an array"
    fi

    while [[ -n "${!parameter:-}" ]]; do
      result+=("${!parameter}")
      i=$((i+1))
      parameter="${prefix}_${i}"
    done
  done

  [[ ${#result[@]} -gt 0 ]] || return 1
}

get_codecov_uploader() {
  case "${OS}" in
    alpine|linux|macos)
      # We support these
      ;;
    *)
      error "Your platform (${OS}) is not supported."
      ;;
  esac

  if [[ "${OS}" = "alpine" ]]; then
    apk add gnupg
  fi

  # One-time step
  curl \
      -fSs \
      --retry 5 \
      https://keybase.io/codecovsecurity/pgp_keys.asc \
      | gpg \
          --no-default-keyring \
          --keyring trustedkeys.gpg \
          --import
  local file
  for file in codecov codecov.SHA256SUM codecov.SHA256SUM.sig
  do
    local local_path="${TMP_DIR}/${file}"
    if [[ ! -e "${local_path}" ]]; then
      debug "Local path will be: ${local_path}"
      local remote_source="https://uploader.codecov.io/${CODECOV_VERSION}/${OS}/${file}"
      debug "Source is: ${remote_source}"
      curl \
          -fSs \
          --create-dirs \
          -o "${local_path}" \
          "${remote_source}"
    fi
  done

  (
    pushd "${TMP_DIR}" >/dev/null
    gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
    if [[ "${OS}" = "macos" ]]; then
      shasum -a 256 -c codecov.SHA256SUM
    else
      sha256sum -c codecov.SHA256SUM
    fi
    chmod +x codecov
    popd >/dev/null
  )
}

main() {
  if [[ "${BUILDKITE_PLUGIN_CODECOV_SKIP_ON_FAIL:-false}" =~ ^(true|on|1)$ ]] && [[ "${BUILDKITE_COMMAND_EXIT_STATUS}" -ne 0 ]]; then
    debug "Codecov upload is skipped because step failed with status ${BUILDKITE_COMMAND_EXIT_STATUS}"
    exit 0
  fi

  pushd "${BUILDKITE_BUILD_CHECKOUT_PATH}" >/dev/null

  local args=()
  local force_zero_exit="true" # by default this plugin never fails
  if plugin_read_list_into_result BUILDKITE_PLUGIN_CODECOV_ARGS ; then
    for arg in "${result[@]}" ; do
      args+=("${arg}")
      if [[ "${arg}" == "-Z" ]]; then
        force_zero_exit="false"
      fi
    done
  fi

  local ci_env
  ci_env=$(bash <(curl -s -S --connect-timeout 10 --retry 3 --retry-delay 10 https://codecov.io/env))

  local codecov_command="${TMP_DIR}/codecov"
  get_codecov_uploader

  set +e
  local exit_code
  # shellcheck disable=SC2086
  docker run \
      $ci_env \
      --label "com.buildkite.job-id=${BUILDKITE_JOB_ID}" \
      --workdir=/workdir \
      --volume="$(pwd)":/workdir \
      --volume=/tmp:/tmp \
      -it \
      --rm \
      ${BUILDKITE_PLUGIN_CODECOV_DOCKER_IMAGE:-buildpack-deps:jessie-scm} \
      bash -c "${codecov_command} ${args[*]:-}"
  exit_code="$?"
  set -e
  popd >/dev/null

  if [[ "${force_zero_exit}" != "true" ]]; then
    exit "${exit_code}"
  fi
}

main "$@"
